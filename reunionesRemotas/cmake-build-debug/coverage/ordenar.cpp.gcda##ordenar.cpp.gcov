        -:    0:Source:/Users/usuario/Desktop/LabAlgo1/tp2/reunionesRemotas/tests/ordenar.cpp
        -:    0:Graph:/Users/usuario/Desktop/LabAlgo1/tp2/reunionesRemotas/cmake-build-debug/CMakeFiles/reunionesRemotas.dir/tests/ordenar.cpp.gcno
        -:    0:Data:/Users/usuario/Desktop/LabAlgo1/tp2/reunionesRemotas/cmake-build-debug/CMakeFiles/reunionesRemotas.dir/tests/ordenar.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "../src/solucion.h"
        -:    2:#include "../src/auxiliares.h"
        -:    3:#include "../lib/gtest.h"
        -:    4:
        -:    5:
        -:    6:using namespace std;
        -:    7:
        7:    8:TEST(ordenarTEST, ordenarValido)
        1:    8-block  0
        1:    8-block  1
        1:    8-block  2
        1:    8-block  3
        1:    8-block  4
        1:    8-block  5
        1:    8-block  6
    $$$$$:    8-block  7
    $$$$$:    8-block  8
    $$$$$:    8-block  9
    $$$$$:    8-block 10
    $$$$$:    8-block 11
    $$$$$:    8-block 12
        1:    8-block 13
        1:    8-block 14
        1:    8-block 15
        1:    8-block 16
        1:    8-block 17
        1:    8-block 18
        1:    8-block 19
        1:    8-block 20
        1:    8-block 21
        1:    8-block 22
        1:    8-block 23
        -:    9:{
        1:   10:    senial hablante1 = {1, 3, -3, 4, 6, 0, -2, -8, 9, -15};
        1:   11:    senial hablante2 = {2, 6, 3, 8, 6, 10, 2, 12, 10, -15};
        1:   11-block  0
        2:   12:    reunion reunionOriginal = {make_pair(hablante1, 0), make_pair(hablante2, 1)};
        1:   12-block  0
        1:   12-block  1
        1:   12-block  2
        1:   12-block  3
        2:   12-block  4
    $$$$$:   12-block  5
    $$$$$:   12-block  6
    $$$$$:   12-block  7
    $$$$$:   12-block  8
    $$$$$:   12-block  9
    $$$$$:   12-block 10
        1:   13:    int prof = 8;
        1:   14:    int freq = 10;
        -:   15:
        2:   16:    reunion reunionOrdenada = {make_pair(hablante2, 1), make_pair(hablante1, 0)};
        1:   16-block  0
        1:   16-block  1
        1:   16-block  2
        1:   16-block  3
        2:   16-block  4
    $$$$$:   16-block  5
    $$$$$:   16-block  6
    $$$$$:   16-block  7
    $$$$$:   16-block  8
    $$$$$:   16-block  9
    $$$$$:   16-block 10
        -:   17:
        1:   18:    ordenar(reunionOriginal, prof, freq);
        1:   18-block  0
        -:   19:
        1:   20:    ASSERT_REUNION_EQ(reunionOriginal, reunionOrdenada);
        1:   20-block  0
        1:   20-block  1
        1:   20-block  2
    $$$$$:   20-block  3
    $$$$$:   20-block  4
        1:   21:}
        1:   21-block  0
    $$$$$:   21-block  1
    $$$$$:   21-block  2
    $$$$$:   21-block  3
    $$$$$:   21-block  4
    $$$$$:   21-block  5
    $$$$$:   21-block  6
    $$$$$:   21-block  7
    $$$$$:   21-block  8
        -:   22:
        7:   23:TEST(ordenarTEST, ordenarValido2)
        1:   23-block  0
        1:   23-block  1
        1:   23-block  2
        1:   23-block  3
        1:   23-block  4
        1:   23-block  5
        1:   23-block  6
    $$$$$:   23-block  7
    $$$$$:   23-block  8
    $$$$$:   23-block  9
    $$$$$:   23-block 10
    $$$$$:   23-block 11
    $$$$$:   23-block 12
        1:   23-block 13
        1:   23-block 14
        1:   23-block 15
        1:   23-block 16
        1:   23-block 17
        1:   23-block 18
        1:   23-block 19
        1:   23-block 20
        1:   23-block 21
        1:   23-block 22
        1:   23-block 23
        -:   24:{
        1:   25:    senial hablante = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
        1:   26:    reunion reunionOriginal = { make_pair(hablante, 0) };
        1:   26-block  0
        1:   26-block  1
        1:   26-block  2
        1:   26-block  3
    $$$$$:   26-block  4
    $$$$$:   26-block  5
    $$$$$:   26-block  6
    $$$$$:   26-block  7
    $$$$$:   26-block  8
    $$$$$:   26-block  9
        1:   27:    int prof = 32;
        1:   28:    int freq = 10;
        -:   29:
        1:   30:    reunion reunionOrdenada = { make_pair(hablante, 0) };
        1:   30-block  0
        1:   30-block  1
        1:   30-block  2
        1:   30-block  3
    $$$$$:   30-block  4
    $$$$$:   30-block  5
    $$$$$:   30-block  6
    $$$$$:   30-block  7
    $$$$$:   30-block  8
    $$$$$:   30-block  9
        -:   31:
        1:   32:    ordenar(reunionOriginal, prof, freq);
        1:   32-block  0
        -:   33:
        1:   34:    ASSERT_REUNION_EQ(reunionOriginal, reunionOrdenada);
        1:   34-block  0
        1:   34-block  1
        1:   34-block  2
    $$$$$:   34-block  3
    $$$$$:   34-block  4
        1:   35:}
        1:   35-block  0
    $$$$$:   35-block  1
    $$$$$:   35-block  2
    $$$$$:   35-block  3
    $$$$$:   35-block  4
    $$$$$:   35-block  5
    $$$$$:   35-block  6
        -:   36:
        7:   37:TEST(ordenarTEST, ordenarValido4)
        1:   37-block  0
        1:   37-block  1
        1:   37-block  2
        1:   37-block  3
        1:   37-block  4
        1:   37-block  5
        1:   37-block  6
    $$$$$:   37-block  7
    $$$$$:   37-block  8
    $$$$$:   37-block  9
    $$$$$:   37-block 10
    $$$$$:   37-block 11
    $$$$$:   37-block 12
        1:   37-block 13
        1:   37-block 14
        1:   37-block 15
        1:   37-block 16
        1:   37-block 17
        1:   37-block 18
        1:   37-block 19
        1:   37-block 20
        1:   37-block 21
        1:   37-block 22
        1:   37-block 23
        -:   38:{
        1:   39:    senial hablante1 = { 5, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
        1:   40:    senial hablante2 = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
        1:   40-block  0
        2:   41:    reunion reunionOriginal = { make_pair(hablante1, 0), make_pair(hablante2, 1) };
        1:   41-block  0
        1:   41-block  1
        1:   41-block  2
        1:   41-block  3
        2:   41-block  4
    $$$$$:   41-block  5
    $$$$$:   41-block  6
    $$$$$:   41-block  7
    $$$$$:   41-block  8
    $$$$$:   41-block  9
    $$$$$:   41-block 10
        1:   42:    int prof = 32;
        1:   43:    int freq = 10;
        -:   44:
        2:   45:    reunion reunionOrdenada = { make_pair(hablante1, 0), make_pair(hablante2, 1) };
        1:   45-block  0
        1:   45-block  1
        1:   45-block  2
        1:   45-block  3
        2:   45-block  4
    $$$$$:   45-block  5
    $$$$$:   45-block  6
    $$$$$:   45-block  7
    $$$$$:   45-block  8
    $$$$$:   45-block  9
    $$$$$:   45-block 10
        -:   46:
        1:   47:    ordenar(reunionOriginal, prof, freq);
        1:   47-block  0
        -:   48:
        1:   49:    ASSERT_REUNION_EQ(reunionOriginal, reunionOrdenada);
        1:   49-block  0
        1:   49-block  1
        1:   49-block  2
    $$$$$:   49-block  3
    $$$$$:   49-block  4
        1:   50:}
        1:   50-block  0
    $$$$$:   50-block  1
    $$$$$:   50-block  2
    $$$$$:   50-block  3
    $$$$$:   50-block  4
    $$$$$:   50-block  5
    $$$$$:   50-block  6
    $$$$$:   50-block  7
    $$$$$:   50-block  8
        -:   51:
        7:   52:TEST(ordenarTEST, ordenarValido5)
        1:   52-block  0
        1:   52-block  1
        1:   52-block  2
        1:   52-block  3
        1:   52-block  4
        1:   52-block  5
        1:   52-block  6
    $$$$$:   52-block  7
    $$$$$:   52-block  8
    $$$$$:   52-block  9
    $$$$$:   52-block 10
    $$$$$:   52-block 11
    $$$$$:   52-block 12
        1:   52-block 13
        1:   52-block 14
        1:   52-block 15
        1:   52-block 16
        1:   52-block 17
        1:   52-block 18
        1:   52-block 19
        1:   52-block 20
        1:   52-block 21
        1:   52-block 22
        1:   52-block 23
        -:   53:{
        1:   54:    senial hablante1 = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };
        1:   55:    senial hablante2 = { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
        1:   55-block  0
        1:   56:    senial hablante3 = { 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
        1:   56-block  0
        1:   57:    senial hablante4 = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };
        1:   57-block  0
        1:   58:    senial hablante5 = { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 };
        1:   58-block  0
        1:   59:    senial hablante6 = { 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 };
        1:   59-block  0
        1:   60:    senial hablante7 = { 20000, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
        1:   60-block  0
        -:   61:    
        -:   62:    
        7:   63:    reunion reunionOriginal = { make_pair(hablante1, 0), make_pair(hablante2, 1), make_pair(hablante3, 2), make_pair(hablante4, 3), make_pair(
        1:   63-block  0
        1:   63-block  1
        1:   63-block  2
        1:   63-block  3
        1:   63-block  4
        1:   63-block  5
        1:   63-block  6
        1:   63-block  7
        7:   63-block  8
    $$$$$:   63-block  9
    $$$$$:   63-block 10
    $$$$$:   63-block 11
    $$$$$:   63-block 12
    $$$$$:   63-block 13
    $$$$$:   63-block 14
        1:   64:            hablante5, 4), make_pair(hablante6, 5), make_pair(hablante7, 6), };
        1:   64-block  0
        1:   64-block  1
        1:   65:    int prof = 32;
        1:   66:    int freq = 10;
        -:   67:
        7:   68:    reunion reunionOrdenada = { make_pair(hablante7, 6), make_pair(hablante6, 5), make_pair(hablante5, 4), make_pair(hablante1, 0), make_pair(
        1:   68-block  0
        1:   68-block  1
        1:   68-block  2
        1:   68-block  3
        1:   68-block  4
        1:   68-block  5
        1:   68-block  6
        1:   68-block  7
        7:   68-block  8
    $$$$$:   68-block  9
    $$$$$:   68-block 10
    $$$$$:   68-block 11
    $$$$$:   68-block 12
    $$$$$:   68-block 13
    $$$$$:   68-block 14
        1:   69:            hablante4, 3), make_pair(hablante3, 2), make_pair(hablante2, 1), };
        1:   69-block  0
        1:   69-block  1
        -:   70:
        1:   71:    ordenar(reunionOriginal, prof, freq);
        1:   71-block  0
        -:   72:
        1:   73:    ASSERT_REUNION_EQ(reunionOriginal, reunionOrdenada);
        1:   73-block  0
        1:   73-block  1
        1:   73-block  2
    $$$$$:   73-block  3
    $$$$$:   73-block  4
        1:   74:}
        1:   74-block  0
    $$$$$:   74-block  1
    $$$$$:   74-block  2
    $$$$$:   74-block  3
    $$$$$:   74-block  4
    $$$$$:   74-block  5
    $$$$$:   74-block  6
    $$$$$:   74-block  7
    $$$$$:   74-block  8
    $$$$$:   74-block  9
    $$$$$:   74-block 10
    $$$$$:   74-block 11
    $$$$$:   74-block 12
    $$$$$:   74-block 13
    $$$$$:   74-block 14
    $$$$$:   74-block 15
    $$$$$:   74-block 16
    $$$$$:   74-block 17
    $$$$$:   74-block 18
        -:   75:
        7:   76:TEST(ordenarTEST, ordenarValido6)
        1:   76-block  0
        1:   76-block  1
        1:   76-block  2
        1:   76-block  3
        1:   76-block  4
        1:   76-block  5
        1:   76-block  6
    $$$$$:   76-block  7
    $$$$$:   76-block  8
    $$$$$:   76-block  9
    $$$$$:   76-block 10
    $$$$$:   76-block 11
    $$$$$:   76-block 12
        1:   76-block 13
        1:   76-block 14
        1:   76-block 15
        1:   76-block 16
        1:   76-block 17
        1:   76-block 18
        1:   76-block 19
        1:   76-block 20
        1:   76-block 21
        1:   76-block 22
        1:   76-block 23
        -:   77:{
        1:   78:    senial hablante1 = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };
        1:   79:    senial hablante2 = { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
        1:   79-block  0
        1:   80:    senial hablante3 = { 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
        1:   80-block  0
        1:   81:    senial hablante4 = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };
        1:   81-block  0
        1:   82:    senial hablante5 = { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 };
        1:   82-block  0
        1:   83:    senial hablante6 = { 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 };
        1:   83-block  0
        1:   84:    senial hablante7 = { 20000, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
        1:   84-block  0
        -:   85:
        7:   86:    reunion reunionOriginal = { make_pair(hablante1, 0), make_pair(hablante5, 4), make_pair(hablante7, 6), make_pair(hablante4, 3), make_pair(
        1:   86-block  0
        1:   86-block  1
        1:   86-block  2
        1:   86-block  3
        1:   86-block  4
        1:   86-block  5
        1:   86-block  6
        1:   86-block  7
        7:   86-block  8
    $$$$$:   86-block  9
    $$$$$:   86-block 10
    $$$$$:   86-block 11
    $$$$$:   86-block 12
    $$$$$:   86-block 13
    $$$$$:   86-block 14
        1:   87:            hablante6, 5), make_pair(hablante2, 1), make_pair(hablante3, 2), };
        1:   87-block  0
        1:   87-block  1
        1:   88:    int prof = 32;
        1:   89:    int freq = 10;
        -:   90:
        7:   91:    reunion reunionOrdenada = { make_pair(hablante7, 6), make_pair(hablante6, 5), make_pair(hablante5, 4), make_pair(hablante1, 0), make_pair(
        1:   91-block  0
        1:   91-block  1
        1:   91-block  2
        1:   91-block  3
        1:   91-block  4
        1:   91-block  5
        1:   91-block  6
        1:   91-block  7
        7:   91-block  8
    $$$$$:   91-block  9
    $$$$$:   91-block 10
    $$$$$:   91-block 11
    $$$$$:   91-block 12
    $$$$$:   91-block 13
    $$$$$:   91-block 14
        1:   92:            hablante4, 3), make_pair(hablante3, 2), make_pair(hablante2, 1), };
        1:   92-block  0
        1:   92-block  1
        -:   93:
        1:   94:    ordenar(reunionOriginal, prof, freq);
        1:   94-block  0
        -:   95:
        1:   96:    ASSERT_REUNION_EQ(reunionOriginal, reunionOrdenada);
        1:   96-block  0
        1:   96-block  1
        1:   96-block  2
    $$$$$:   96-block  3
    $$$$$:   96-block  4
        1:   97:}
        1:   97-block  0
    $$$$$:   97-block  1
    $$$$$:   97-block  2
    $$$$$:   97-block  3
    $$$$$:   97-block  4
    $$$$$:   97-block  5
    $$$$$:   97-block  6
    $$$$$:   97-block  7
    $$$$$:   97-block  8
    $$$$$:   97-block  9
    $$$$$:   97-block 10
    $$$$$:   97-block 11
    $$$$$:   97-block 12
    $$$$$:   97-block 13
    $$$$$:   97-block 14
    $$$$$:   97-block 15
    $$$$$:   97-block 16
    $$$$$:   97-block 17
    $$$$$:   97-block 18
        -:   98:
        7:   99:TEST(ordenarTEST, ordenarValido7)
        1:   99-block  0
        1:   99-block  1
        1:   99-block  2
        1:   99-block  3
        1:   99-block  4
        1:   99-block  5
        1:   99-block  6
    $$$$$:   99-block  7
    $$$$$:   99-block  8
    $$$$$:   99-block  9
    $$$$$:   99-block 10
    $$$$$:   99-block 11
    $$$$$:   99-block 12
        1:   99-block 13
        1:   99-block 14
        1:   99-block 15
        1:   99-block 16
        1:   99-block 17
        1:   99-block 18
        1:   99-block 19
        1:   99-block 20
        1:   99-block 21
        1:   99-block 22
        1:   99-block 23
        -:  100:{
        1:  101:    senial hablante1 = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };
        1:  102:    senial hablante2 = { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
        1:  102-block  0
        1:  103:    senial hablante3 = { 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
        1:  103-block  0
        1:  104:    senial hablante4 = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };
        1:  104-block  0
        1:  105:    senial hablante5 = { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 };
        1:  105-block  0
        1:  106:    senial hablante6 = { 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 };
        1:  106-block  0
        1:  107:    senial hablante7 = { 20000, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
        1:  107-block  0
        1:  108:    senial hablante8 = { 20000, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
        1:  108-block  0
        -:  109:
        8:  110:    reunion reunionOriginal = { make_pair(hablante1, 0), make_pair(hablante5, 4), make_pair(hablante7, 6), make_pair(hablante4, 3), make_pair(
        1:  110-block  0
        1:  110-block  1
        1:  110-block  2
        1:  110-block  3
        1:  110-block  4
        1:  110-block  5
        1:  110-block  6
        1:  110-block  7
        8:  110-block  8
    $$$$$:  110-block  9
    $$$$$:  110-block 10
    $$$$$:  110-block 11
    $$$$$:  110-block 12
    $$$$$:  110-block 13
    $$$$$:  110-block 14
        1:  111:            hablante6, 5), make_pair(hablante2, 1), make_pair(hablante3, 2), make_pair(hablante8, 7) };
        1:  111-block  0
        1:  111-block  1
        1:  111-block  2
        1:  112:    int prof = 32;
        1:  113:    int freq = 10;
        -:  114:
        8:  115:    reunion reunionOrdenada = { make_pair(hablante7, 6), make_pair(hablante8, 7), make_pair(hablante6, 5), make_pair(hablante5, 4), make_pair(
        1:  115-block  0
        1:  115-block  1
        1:  115-block  2
        1:  115-block  3
        1:  115-block  4
        1:  115-block  5
        1:  115-block  6
        1:  115-block  7
        8:  115-block  8
    $$$$$:  115-block  9
    $$$$$:  115-block 10
    $$$$$:  115-block 11
    $$$$$:  115-block 12
    $$$$$:  115-block 13
    $$$$$:  115-block 14
        1:  116:            hablante1, 0), make_pair(hablante4, 3), make_pair(hablante3, 2), make_pair(hablante2, 1), };
        1:  116-block  0
        1:  116-block  1
        1:  116-block  2
        -:  117:
        1:  118:    ordenar(reunionOriginal, prof, freq);
        1:  118-block  0
        -:  119:
        1:  120:    ASSERT_REUNION_EQ(reunionOriginal, reunionOrdenada);
        1:  120-block  0
        1:  120-block  1
        1:  120-block  2
    $$$$$:  120-block  3
    $$$$$:  120-block  4
        1:  121:}
        1:  121-block  0
    $$$$$:  121-block  1
    $$$$$:  121-block  2
    $$$$$:  121-block  3
    $$$$$:  121-block  4
    $$$$$:  121-block  5
    $$$$$:  121-block  6
    $$$$$:  121-block  7
    $$$$$:  121-block  8
    $$$$$:  121-block  9
    $$$$$:  121-block 10
    $$$$$:  121-block 11
    $$$$$:  121-block 12
    $$$$$:  121-block 13
    $$$$$:  121-block 14
    $$$$$:  121-block 15
    $$$$$:  121-block 16
    $$$$$:  121-block 17
    $$$$$:  121-block 18
    $$$$$:  121-block 19
    $$$$$:  121-block 20
        -:  122:
        7:  123:TEST(ordenarTEST, ordenarValido8)
        1:  123-block  0
        1:  123-block  1
        1:  123-block  2
        1:  123-block  3
        1:  123-block  4
        1:  123-block  5
        1:  123-block  6
    $$$$$:  123-block  7
    $$$$$:  123-block  8
    $$$$$:  123-block  9
    $$$$$:  123-block 10
    $$$$$:  123-block 11
    $$$$$:  123-block 12
        1:  123-block 13
        1:  123-block 14
        1:  123-block 15
        1:  123-block 16
        1:  123-block 17
        1:  123-block 18
        1:  123-block 19
        1:  123-block 20
        1:  123-block 21
        1:  123-block 22
        1:  123-block 23
        -:  124:{
        1:  125:    senial hablante1 = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };
        1:  126:    senial hablante2 = { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
        1:  126-block  0
        1:  127:    senial hablante3 = { 10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
        1:  127-block  0
        1:  128:    senial hablante4 = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };
        1:  128-block  0
        1:  129:    senial hablante5 = { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 };
        1:  129-block  0
        1:  130:    senial hablante6 = { 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 };
        1:  130-block  0
        1:  131:    senial hablante7 = { 20000, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
        1:  131-block  0
        1:  132:    senial hablante8 = { 20000, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
        1:  132-block  0
        -:  133:
        8:  134:    reunion reunionOriginal = { make_pair(hablante1, 0), make_pair(hablante5, 4), make_pair(hablante7, 6), make_pair(hablante4, 3), make_pair(
        1:  134-block  0
        1:  134-block  1
        1:  134-block  2
        1:  134-block  3
        1:  134-block  4
        1:  134-block  5
        1:  134-block  6
        1:  134-block  7
        8:  134-block  8
    $$$$$:  134-block  9
    $$$$$:  134-block 10
    $$$$$:  134-block 11
    $$$$$:  134-block 12
    $$$$$:  134-block 13
    $$$$$:  134-block 14
        1:  135:            hablante6, 5), make_pair(hablante3, 2), make_pair(hablante2, 1), make_pair(hablante8, 7) };
        1:  135-block  0
        1:  135-block  1
        1:  135-block  2
        1:  136:    int prof = 32;
        1:  137:    int freq = 10;
        -:  138:
        8:  139:    reunion reunionOrdenada = { make_pair(hablante7, 6), make_pair(hablante8, 7), make_pair(hablante6, 5), make_pair(hablante5, 4), make_pair(
        1:  139-block  0
        1:  139-block  1
        1:  139-block  2
        1:  139-block  3
        1:  139-block  4
        1:  139-block  5
        1:  139-block  6
        1:  139-block  7
        8:  139-block  8
    $$$$$:  139-block  9
    $$$$$:  139-block 10
    $$$$$:  139-block 11
    $$$$$:  139-block 12
    $$$$$:  139-block 13
    $$$$$:  139-block 14
        1:  140:            hablante1, 0), make_pair(hablante4, 3), make_pair(hablante3, 2), make_pair(hablante2, 1), };
        1:  140-block  0
        1:  140-block  1
        1:  140-block  2
        -:  141:
        1:  142:    ordenar(reunionOriginal, prof, freq);
        1:  142-block  0
        -:  143:
        1:  144:    ASSERT_REUNION_EQ(reunionOriginal, reunionOrdenada);
        1:  144-block  0
        1:  144-block  1
        1:  144-block  2
    $$$$$:  144-block  3
    $$$$$:  144-block  4
        1:  145:}
        1:  145-block  0
    $$$$$:  145-block  1
    $$$$$:  145-block  2
    $$$$$:  145-block  3
    $$$$$:  145-block  4
    $$$$$:  145-block  5
    $$$$$:  145-block  6
    $$$$$:  145-block  7
    $$$$$:  145-block  8
    $$$$$:  145-block  9
    $$$$$:  145-block 10
    $$$$$:  145-block 11
    $$$$$:  145-block 12
    $$$$$:  145-block 13
    $$$$$:  145-block 14
    $$$$$:  145-block 15
    $$$$$:  145-block 16
    $$$$$:  145-block 17
    $$$$$:  145-block 18
    $$$$$:  145-block 19
    $$$$$:  145-block 20
